pipeline {
    agent any
    stages {
        stage('Verify') {
            steps {
                slackSend message: "Build Started - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Link>)"
                sh 'docker version'
            }
        }
        stage('Build & Test') {
            steps {
                sh 'docker image build -t sixeyed/pi-psod -f ./docker/web/Dockerfile.v2 .'
            }
        }
        stage('Publish test results') {
            steps {
                sh '''
                  id=$(docker container create sixeyed/pi-psod)
                  docker cp $id:/app/test-results/ .
                  docker container rm -f $id
                '''
                mstest testResultsFile:"**/*.trx"
            }
        }
        stage('Audit tools') {   

            steps {
                sh '''
                  docker  run --rm sixeyed/pi-psod
                  git version
                  docker version
                  sixeyed/pi-psod  --list-sdks
                  sixeyed/pi-psod  --list-runtimes
                '''
            }
        }
        
    }
}
